NEMtropy documentation
=====================================

NEMtropy is a Maximum-Entropy toolbox for networks, released as a
python3 module.

NEMtropy provides the user with a state of the art solver for a range
variety of Maximum Entropy Networks models derived from the ERGM family.
This module allows you to solve the desired model and generate a number
of randomized graphs from the original one: the so-called *graphs
ensemble*.

NEMtropy builds on the current literature on the matter, improving both
in speed of convergence and in the scale of the feasible networks. To
explore Maximum-Entropy modeling on networks, checkout `Maximum Entropy
Hub <https://meh.imtlucca.it/>`__.

The models implemented in NEMtropy are presented in a forthcoming
`paper <https://arxiv.org/abs/2101.12625>`__ on arXiv. If you use the
module for your scientific research, please consider citing us:

::

        @misc{vallarano2021fast,
              title={Fast and scalable likelihood maximization for Exponential Random Graph Models}, 
              author={Nicol√≤ Vallarano and Matteo Bruno and Emiliano Marchese and Giuseppe Trapani and Fabio Saracco and Tiziano Squartini and Giulio Cimini and Mario Zanon},
              year={2021},
              eprint={2101.12625},
              archivePrefix={arXiv},
              primaryClass={physics.data-an}
        }

Currently Implemented Models
============================

The main feature of NEMtropy is (but not limited to) *network
randomization*. The specific kind of network to randomize and property
to preserve defines the model you need:

-  **UBCM** *Undirected Binary Configuration Model* `[1] <#1>`__
-  **UECM** *Undirected Enhanced Configuration Model* `[1] <#1>`__
-  **DBCM** *Directed Binary Configuration Model* `[1] <#1>`__
-  **DECM** *Directed Enhanced Configuration Model* `[1] <#1>`__
-  **CReMa** `[2] <#2>`__

The following table may helps you identify the model that fits your
needs in function of the type of network you are working with; for
in-depth discussion please see the references.

+----------------------+--------------------+-------------------+
| [...]                | Undirected Graph   | Directed Graph    |
+======================+====================+===================+
| **Binary Graph**     | *UBCM*             | *DBCM*            |
+----------------------+--------------------+-------------------+
| **Weighted Graph**   | *UECM*, *CReMa*    | *DECM*, *CReMa*   |
+----------------------+--------------------+-------------------+

*References*

-  [1] Squartini, Tiziano, Rossana Mastrandrea, and Diego Garlaschelli.
   "Unbiased sampling of network ensembles." New Journal of Physics 17.2
   (2015): 023052. https://arxiv.org/abs/1406.1197
-  [2] Parisi, Federica, Tiziano Squartini, and Diego Garlaschelli. "A
   faster horse on a safer trail: generalized inference for the
   efficient reconstruction of weighted networks." New Journal of
   Physics 22.5 (2020): 053053. https://arxiv.org/abs/1811.09829


Basic functionalities
=====================

NEMtropy can be installed via pip. You can get it from your terminal:

```
    $ pip install NEMtropy
```

If you already install the package and wish to upgrade it,
you can simply type from your terminal:

```
    $ pip install NEMtropy --upgrade
```


Dependencies
============

NEMtropy uses <code>numba</code> library. It can be installed via pip by running
in your terminal the following command:

```
    $ pip install numba
```

For <code>python3.5</code> users the correct command is the following:

```
    $ pip install --prefer-binary numba
```

It avoids an error during the installation of <code>llvmlite</code> due to 
the absence of its wheel in <code>python3.5</code>.

Guide
^^^^^^

.. toctree::
   :maxdepth: 2
   :caption: Contents:

   install
   NEMtropy
   license
   contacts
   
Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
